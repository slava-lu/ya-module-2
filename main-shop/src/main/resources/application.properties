spring.application.name=shop

server.port=8080

# tell Spring to run schema.sql / data.sql against R2DBC
spring.sql.init.mode=always


# point at the same in?mem database
spring.r2dbc.url=r2dbc:h2:mem:///testdb?DB_CLOSE_DELAY=-1&MODE=PostgreSQL
spring.r2dbc.username=sa
spring.r2dbc.password=

payment.service.base-url=${PAYMENTS_SERVICE_URL:http://localhost:8081}

spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.timeout=2000

spring.security.oauth2.client.provider.auth-server.token-uri=${SPRING_SECURITY_OAUTH2_URI:http://localhost:9000}/oauth2/token

spring.security.oauth2.client.registration.main-shop-client.client-id=main-shop-client
spring.security.oauth2.client.registration.main-shop-client.client-secret=secret
spring.security.oauth2.client.registration.main-shop-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.main-shop-client.scope=payments.read,payments.write
spring.security.oauth2.client.registration.main-shop-client.provider=auth-server
